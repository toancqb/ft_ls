int ft_R_origin(const char *name, t_list **st
, void (*sx)(t_list**, int (*ft_strcmp_Mm)(char*,char*))) //++
{
	/*
	 * Somehow algo doesnt work
	 * Error in t_list : "..zw"instead of ".." !!!!!!!!!!!!!
	 * New funcs: ft_strjoin_path (test ok) isHidden_pwd (test ok)
	 * Funcs need to be reviewed: swap strlen of t_list content
	 */
	DIR				*dir;
	struct dirent	*dptr;
	const char		*n;
	char			path[PATH_LEN_MAX];
	t_list			*t;

	if (!isDir(name))
		return (0);
	t = NULL;
	ERROR_CHECK((dir = opendir(name)));
	ft_putstr(name); ft_putstr(":\n");
	while ((dptr = readdir(dir)) != NULL)
	{
		n = (const char*)dptr->d_name;
		ft_queue_push(&t, ft_queue_init_elem((char*)n, ft_strlen((char*)n)));
		//free(n);
	}
	(*sx)(&t, &ft_strcmp_Mm);
	//error_fix_tmp(&t);
	display_st(t);
	while (!ft_queue_is_empty(t))
	{
		//m = ft_strjoin_path((char*)name, ft_queue_pop(&t));
		snprintf(path, PATH_LEN_MAX, "%s/%s", name, ft_queue_pop(&t));
		if (isDir(path) && !isHidden_pwd(path))
		{
			ft_putstr("\n");
			ft_R(path, st, sx);
		}
		//free(m);
	}
	//ft_lstdel(&t);  //does not WORK !!!
	ERROR_CHECK(!(closedir(dir)));
	return (1);
}
